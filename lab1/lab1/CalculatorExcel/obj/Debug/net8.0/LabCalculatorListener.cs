//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\repository Github\oop\lab1\lab1\CalculatorExcel\LabCalculator.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace LabCalculator {
using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="LabCalculatorParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public interface ILabCalculatorListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by the <c>SubOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSubOperand([NotNull] LabCalculatorParser.SubOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>SubOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSubOperand([NotNull] LabCalculatorParser.SubOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>DivOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDivOperand([NotNull] LabCalculatorParser.DivOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>DivOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDivOperand([NotNull] LabCalculatorParser.DivOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryPlus</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryPlus([NotNull] LabCalculatorParser.UnaryPlusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryPlus</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryPlus([NotNull] LabCalculatorParser.UnaryPlusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>MulOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMulOperand([NotNull] LabCalculatorParser.MulOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>MulOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMulOperand([NotNull] LabCalculatorParser.MulOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryMinus([NotNull] LabCalculatorParser.UnaryMinusContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryMinus</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryMinus([NotNull] LabCalculatorParser.UnaryMinusContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomExpr([NotNull] LabCalculatorParser.AtomExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomExpr([NotNull] LabCalculatorParser.AtomExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AddOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAddOperand([NotNull] LabCalculatorParser.AddOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AddOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAddOperand([NotNull] LabCalculatorParser.AddOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ModOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModOperand([NotNull] LabCalculatorParser.ModOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ModOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModOperand([NotNull] LabCalculatorParser.ModOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAndExpr([NotNull] LabCalculatorParser.AndExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AndExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAndExpr([NotNull] LabCalculatorParser.AndExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>BoolExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBoolExpr([NotNull] LabCalculatorParser.BoolExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>BoolExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBoolExpr([NotNull] LabCalculatorParser.BoolExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>CompareExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompareExpr([NotNull] LabCalculatorParser.CompareExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>CompareExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompareExpr([NotNull] LabCalculatorParser.CompareExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedExpr([NotNull] LabCalculatorParser.ParenthesizedExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedExpr([NotNull] LabCalculatorParser.ParenthesizedExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>NotExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNotExpr([NotNull] LabCalculatorParser.NotExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>NotExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNotExpr([NotNull] LabCalculatorParser.NotExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOrExpr([NotNull] LabCalculatorParser.OrExprContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>OrExpr</c>
	/// labeled alternative in <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOrExpr([NotNull] LabCalculatorParser.OrExprContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomBool</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomBool([NotNull] LabCalculatorParser.AtomBoolContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomBool</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomBool([NotNull] LabCalculatorParser.AtomBoolContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomNumber</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomNumber([NotNull] LabCalculatorParser.AtomNumberContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomNumber</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomNumber([NotNull] LabCalculatorParser.AtomNumberContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomIdentifier</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomIdentifier([NotNull] LabCalculatorParser.AtomIdentifierContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomIdentifier</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomIdentifier([NotNull] LabCalculatorParser.AtomIdentifierContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>AtomParenthesized</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtomParenthesized([NotNull] LabCalculatorParser.AtomParenthesizedContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>AtomParenthesized</c>
	/// labeled alternative in <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtomParenthesized([NotNull] LabCalculatorParser.AtomParenthesizedContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>UnaryOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterUnaryOperand([NotNull] LabCalculatorParser.UnaryOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>UnaryOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitUnaryOperand([NotNull] LabCalculatorParser.UnaryOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ModDivOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterModDivOperand([NotNull] LabCalculatorParser.ModDivOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ModDivOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitModDivOperand([NotNull] LabCalculatorParser.ModDivOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by the <c>ParenthesizedOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterParenthesizedOperand([NotNull] LabCalculatorParser.ParenthesizedOperandContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>ParenthesizedOperand</c>
	/// labeled alternative in <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitParenthesizedOperand([NotNull] LabCalculatorParser.ParenthesizedOperandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCompileUnit([NotNull] LabCalculatorParser.CompileUnitContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.compileUnit"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCompileUnit([NotNull] LabCalculatorParser.CompileUnitContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpression([NotNull] LabCalculatorParser.ExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpression([NotNull] LabCalculatorParser.ExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterLogicExpression([NotNull] LabCalculatorParser.LogicExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.logicExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitLogicExpression([NotNull] LabCalculatorParser.LogicExpressionContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComparison([NotNull] LabCalculatorParser.ComparisonContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.comparison"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComparison([NotNull] LabCalculatorParser.ComparisonContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterOperand([NotNull] LabCalculatorParser.OperandContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.operand"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitOperand([NotNull] LabCalculatorParser.OperandContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] LabCalculatorParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="LabCalculatorParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] LabCalculatorParser.AtomContext context);
}
} // namespace LabCalculator
